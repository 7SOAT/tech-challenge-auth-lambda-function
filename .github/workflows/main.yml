name: Production Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:  
      TF_VAR_aws_access_key_id: ${{ secrets.TF_VAR_AWS_ACCESS_KEY_ID }}
      TF_VAR_aws_cognito_client_auth_flow: ${{ secrets.TF_VAR_AWS_COGNITO_CLIENT_AUTH_FLOW }}
      TF_VAR_aws_cognito_client_id: ${{ secrets.TF_VAR_AWS_COGNITO_CLIENT_ID }}
      TF_VAR_aws_cognito_default_user_group: ${{ secrets.TF_VAR_AWS_COGNITO_DEFAULT_USER_GROUP }}
      TF_VAR_aws_cognito_temporary_password: ${{ secrets.TF_VAR_AWS_COGNITO_TEMPORARY_PASSWORD }}
      TF_VAR_aws_cognito_user_pool_id: ${{ secrets.TF_VAR_AWS_COGNITO_USER_POOL_ID }}
      TF_VAR_aws_region: ${{ secrets.TF_VAR_AWS_REGION }}
      TF_VAR_aws_secret_access_key: ${{ secrets.TF_VAR_AWS_SECRET_ACCESS_KEY }}
      TF_VAR_aws_session_token: ${{ secrets.TF_VAR_AWS_SESSION_TOKEN }}
      TF_VAR_aws_iam_labrole_arn: ${{ secrets.TF_VAR_AWS_IAM_LABROLE_ARN }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Create zip of node_modules and dist
      run: |
        zip -r terraform/lambda.zip dist

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.TF_VAR_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.TF_VAR_AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.TF_VAR_AWS_SESSION_TOKEN }}
        aws-region: ${{ secrets.TF_VAR_AWS_REGION }}

    - name: Terraform Init
      working-directory: terraform
      run: |
        terraform init
  
    - name: Terraform Plan
      working-directory: terraform
      run: |
        terraform plan

    - name: Terraform Apply
      working-directory: terraform
      run: |
        terraform apply -auto-approve
